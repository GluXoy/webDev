Index: src/styles/RegisterForm.module.css
===================================================================
diff --git a/src/styles/RegisterForm.module.css b/src/styles/RegisterForm.module.css
--- a/src/styles/RegisterForm.module.css	
+++ b/src/styles/RegisterForm.module.css	
@@ -1,0 +1,61 @@
+
+.AppForm {
+    display: flex;
+    align-items: initial;
+    flex-direction: column;
+    justify-content: space-around;
+    width: 335px;
+    background: white;
+    padding: 20px 15px;
+    border-radius: 10px;
+    transition: height 0.5s ease;
+    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);
+}
+
+.AppFormBeforeFilling {
+    height: 300px;
+}
+
+.AppFormAfterFilling {
+    height: 335px
+}
+
+.inputField {
+    min-width: 280px;
+    background: #ece5e5;
+    min-height: 45px;
+    border: none;
+    padding: 5px 7px;
+    border-radius: 10px;
+    font-size: 1em;
+    color: #194206;
+}
+
+.inputBtn {
+    min-width: 280px;
+    min-height: 45px;
+    background: #37e700;
+    border: none;
+    border-radius: 10px;
+    padding: 5px 3px;
+    color: #fffefe;
+    font-size: 1em;
+    cursor: pointer;
+}
+
+.FillingMessage {
+    min-width: 280px;
+    min-height: 45px;
+    font-size: 1.3em;
+    background-color: #3f89f8;
+    color: white;
+    padding: 10px 15px;
+    display: flex;
+    align-items: center;
+    flex-direction: column;
+}
+
+.unfilledMessage {
+    color: red;
+    padding: 0 4px;
+}
\ No newline at end of file
Index: src/hooks/useFilledFields.js
===================================================================
diff --git a/src/hooks/useFilledFields.js b/src/hooks/useFilledFields.js
--- a/src/hooks/useFilledFields.js	
+++ b/src/hooks/useFilledFields.js	
@@ -1,0 +1,14 @@
+import {useEffect} from "react";
+
+export const useFilledFields = (fields, setIsFilled) => {
+    useEffect(() => {
+        if (fields.firstName && fields.lastName && fields.email) {
+            console.log("Заполнено!")
+            setIsFilled(true)
+        }
+        else {
+            console.log("НЕ Заполнено!")
+            setIsFilled(false)
+        }
+    }, [fields])
+}
\ No newline at end of file
Index: src/components/RegisterForm.jsx
===================================================================
diff --git a/src/components/RegisterForm.jsx b/src/components/RegisterForm.jsx
--- a/src/components/RegisterForm.jsx	
+++ b/src/components/RegisterForm.jsx	
@@ -1,0 +1,58 @@
+import React, {useState} from 'react';
+import cl from '../styles/RegisterForm.module.css'
+import {useFilledFields} from "../hooks/useFilledFields";
+
+const RegisterForm = ({values, setValues}) => {
+
+    const [isFilled, setIsFilled] = useState(false);
+    const filledFieldsHandler = useFilledFields(values, setIsFilled);
+    const [wasFirstClick, setWasFirstClick] = useState(false);
+
+    const handleButtonClick = (e) => {
+        e.preventDefault()
+        setWasFirstClick(true)
+    }
+
+
+    return (
+        <form className={`${cl.AppForm} ${isFilled ? cl.AppFormAfterFilling : cl.AppFormBeforeFilling}`}>
+            {isFilled && <div className={cl.FillingMessage}>All is good!</div>}
+            <input
+                className={cl.inputField}
+                placeholder="First Name"
+                type="text"
+                name="firstName"
+                onChange={e => setValues({
+                    ...values,
+                    firstName: e.target.value
+                })}
+            />
+            {wasFirstClick && !values.firstName && <span className={cl.unfilledMessage}>Enter first name!</span>}
+            <input
+                className={cl.inputField}
+                placeholder="Last Name"
+                type="text"
+                name="lastName"
+                onChange={e => setValues({
+                    ...values,
+                    lastName: e.target.value
+                })}
+            />
+            {wasFirstClick && !values.lastName && <span className={cl.unfilledMessage}>Enter last name!</span>}
+            <input
+                className={cl.inputField}
+                placeholder="Email"
+                type="text"
+                name="email"
+                onChange={e => setValues({
+                    ...values,
+                    email: e.target.value
+                })}
+            />
+            {wasFirstClick && !values.email && <span className={cl.unfilledMessage}>Enter email!</span>}
+            <button className={cl.inputBtn} onClick={(e) => handleButtonClick(e)}>Register</button>
+        </form>
+    );
+};
+
+export default RegisterForm;
\ No newline at end of file
